pipeline {

 agent {node 'buildserver'}

    stages {
				
        stage("BUILD"){
   		steps {
			echo "Buidling Composites"
	        	sh "hostname ;pwd;id -a ;ls -l ${env.SAG_HOME}"	
                	sh "${env.SAG_HOME}/common/AssetBuildEnvironment/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} build"
		 }
        }
	
		stage("UNITTEST WMTESUITE") {
				steps {
					echo "test"
					echo "need to adapt tests here"
				
		
            }
	    
        }
		
		stage('UPLOAD TO CC REPO'){
			steps {
				echo "uploading build composites into cc repo"
				dir ('/opt/softwareag/common/AssetBuildEnvironment/master_build/Wm_O2C_CI_CDACDLS') {
					sh 'git init'
					sh 'git pull https://github.com/vidb/WmO2CProjectACDLS.git'
					sh 'git add .'
					sh 'git config --global user.name "vidb"'
					sh 'git config --global user.email vidya.bhagwat@softwareag.com'
					sh 'git commit -am "pushing acdls"'
					sh 'git push https://vidb:vidb123@github.com/vidb/WmO2CProjectACDLS.git --all | true'
					
					
				}
			}
        }

        stage('PROVISION ASSETS'){
		
	   
			
            steps {
		 node("master"){	
		 	echo "starting deploying assets using cc"
            		echo "installing IS project"
	        	sh "/var/lib/jenkins/.sag/tools/CommandCentral/client/bin/sagcc exec provisioning assets TestServer WmO2CProjectACDLS install runtimeComponentId=integrationServer-default artifacts=InboundOrderISService,ScOrderToCash --server=http://dcsiqa01:8090/cce -p manage"	
				
				echo "installing MWS project"
				sh '/var/lib/jenkins/.sag/tools/CommandCentral/client/bin/sagcc exec provisioning assets TestServer WmO2CProjectACDLS install runtimeComponentId=MwsProgramFiles-default --server=http://dcsiqa01:8090/cce -p manage'
                	
			}
		}
        }
		
	stage('TEST E2E'){
		
			steps{
				script{
				try{
					echo ("Executing E2E Scenarios")
					echo "test will be started after 3 minutes"
				 	// A sleep to complete asset deployment!
        				sleep 90
					sh "${env.SAG_HOME}/common/AssetBuildEnvironment/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} test" 
					junit 'report/'
				}catch(caughtErr){
					echo ("In Catch blockExecuting E2E Scenarios")
					step([$class: 'JUnitResultArchiver', testResults: '/var/lib/jenkins/workspace/Wm_O2C_CI_CD/assets/IS/Tests/O2CTests/resources/reports/TESTS-Test*.xml'])
        				err = caughtErr
					if (currentBuild.result == 'UNSTABLE')
    						currentBuild.result = 'FAILURE'
	  				throw err
				}
				}
			}
	}
	
	stage('Deploy to Next Stage yes Or No') {
		steps {
				 timeout(time: 45, unit: 'SECONDS'){
				 	script {
                     
                    				mail to: 'Vidya.Bhagwat@softwareag.com',
                     			subject: "Job '${env.JOB_BASE_NAME}' (${env.BUILD_NUMBER}) Please click to choose environment to deploy changes",
                     body: "Please go to console output of ${env.BUILD_URL}console to approve or Reject."
                     userInput = input(id: 'chooseOptions',
                message: 'Select Environment to be deployed',    
                parameters: [                           
                  [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'deploy in Test env', name: 'Test'],    
                  [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'deploy in Staging env', name: 'Staging'],
                  [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'deploy in Prod env', name: 'Prod']
                ]   
)
					}
				}	
		
            	}
  		
	}
    
}
}
